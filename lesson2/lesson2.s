;
; File generated by cc65 v 2.16 - Git N/A
;
	.fopt		compiler,"cc65 v 2.16 - Git N/A"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.forceimport	__STARTUP__
	.export		_NMI_flag
	.export		_Frame_Count
	.export		_index
	.export		_Text_Position
	.export		_TEXT
	.export		_PALETTE
	.export		_Load_Text
	.export		_All_Off
	.export		_All_On
	.export		_Reset_Scroll
	.export		_Load_Palette
	.export		_main

.segment	"RODATA"

_TEXT:
	.byte	$48,$65,$6C,$6C,$6F,$20,$57,$6F,$72,$6C,$64,$21,$00
_PALETTE:
	.byte	$1F
	.byte	$00
	.byte	$10
	.byte	$20

.segment	"BSS"

.segment	"BSS"
_NMI_flag:
	.res	1,$00
.segment	"BSS"
_Frame_Count:
	.res	1,$00
.segment	"BSS"
_index:
	.res	1,$00
.segment	"BSS"
_Text_Position:
	.res	1,$00

; ---------------------------------------------------------------
; void __near__ Load_Text (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_Load_Text: near

.segment	"CODE"

	ldx     #$00
	lda     _Text_Position
	cmp     #$0D
	jsr     boolult
	jeq     L001C
	ldx     #$00
	lda     #$21
	sta     $2006
	ldx     #$00
	lda     _Text_Position
	ldy     #$CA
	jsr     incaxy
	ldx     #$00
	sta     $2006
	lda     #<(_TEXT)
	ldx     #>(_TEXT)
	clc
	adc     _Text_Position
	bcc     L0029
	inx
L0029:	ldy     #$00
	jsr     ldauidx
	sta     $2007
	ldx     #$00
	inc     _Text_Position
	lda     _Text_Position
	jmp     L0035
L001C:	ldx     #$00
	lda     #$00
	sta     _Text_Position
	ldx     #$00
	lda     #$21
	sta     $2006
	ldx     #$00
	lda     #$CA
	sta     $2006
	ldx     #$00
	lda     #$00
	sta     _index
L0034:	ldx     #$00
	lda     _index
	cmp     #$0D
	jsr     boolult
	jne     L0037
	jmp     L0035
L0037:	ldx     #$00
	lda     #$00
	sta     $2007
	ldx     #$00
	inc     _index
	lda     _index
	jmp     L0034
L0035:	rts

.endproc

; ---------------------------------------------------------------
; void __near__ All_Off (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_All_Off: near

.segment	"CODE"

	ldx     #$00
	lda     #$00
	sta     $2000
	ldx     #$00
	lda     #$00
	sta     $2001
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ All_On (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_All_On: near

.segment	"CODE"

	ldx     #$00
	lda     #$90
	sta     $2000
	ldx     #$00
	lda     #$1E
	sta     $2001
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ Reset_Scroll (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_Reset_Scroll: near

.segment	"CODE"

	ldx     #$00
	lda     #$00
	sta     $2006
	ldx     #$00
	lda     #$00
	sta     $2006
	ldx     #$00
	lda     #$00
	sta     $2005
	ldx     #$00
	lda     #$00
	sta     $2005
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ Load_Palette (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_Load_Palette: near

.segment	"CODE"

	ldx     #$00
	lda     #$3F
	sta     $2006
	ldx     #$00
	lda     #$00
	sta     $2006
	ldx     #$00
	lda     #$00
	sta     _index
L0062:	ldx     #$00
	lda     _index
	cmp     #$04
	jsr     boolult
	jne     L0065
	jmp     L0063
L0065:	lda     #<(_PALETTE)
	ldx     #>(_PALETTE)
	clc
	adc     _index
	bcc     L006F
	inx
L006F:	ldy     #$00
	jsr     ldauidx
	sta     $2007
	ldx     #$00
	inc     _index
	lda     _index
	jmp     L0062
L0063:	rts

.endproc

; ---------------------------------------------------------------
; void __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"CODE"

	jsr     _All_Off
	jsr     _Load_Palette
	jsr     _Reset_Scroll
	jsr     _All_On
	jmp     L000D
L000B:	jmp     L0011
L0011:	ldx     #$00
	lda     _NMI_flag
	cmp     #$00
	jsr     booleq
	jne     L0011
	ldx     #$00
	lda     #$00
	sta     _NMI_flag
	ldx     #$00
	lda     _Frame_Count
	cmp     #$1E
	jsr     booleq
	jeq     L000D
	jsr     _Load_Text
	jsr     _Reset_Scroll
	ldx     #$00
	lda     #$00
	sta     _Frame_Count
L000D:	jmp     L000B
	rts

.endproc

